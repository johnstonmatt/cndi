blocks:
  - name: hop-web-ingress
    content:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: hop-web-ingress
        namespace: hop
        annotations:
          cert-manager.io/cluster-issuer: cluster-issuer
          kubernetes.io/tls-acme: 'true'
      spec:
        ingressClassName: public
        tls:
          - hosts:
              - "{{ $cndi.get_arg(hostname) }}"
            secretName: cluster-issuer-private-key
        rules:
          - host: "{{ $cndi.get_arg(hostname) }}"
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: hop-web
                      port:
                        name: http
prompts:
  - $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/common/core-prompts.yaml):
      {}
  - $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/{{ $cndi.get_prompt_response(deployment_target_provider) }}/setup-prompts.yaml):
      {}
  - name: deploy_argocd_ingress
    default: true
    message: >-
      Do you want to install ArgoCD and expose it via an ingress?
    type: Confirm

  - message: 'Please enter the domain name you want argocd to be accessible on:'
    name: argocd_hostname
    default: argocd.example.com
    type: Input
    validators:
      - hostname # FQDN
    condition:
      - "{{ $cndi.get_prompt_response(deploy_argocd_ingress) }}"
      - ==
      - true
  - name: deploy_hop_ingress
    default: true
    message: >-
      Do you want to expose Hop to the web?
    type: Confirm

  - message: 'Please enter the domain name you want hop to be accessible on:'
    name: hop_hostname
    default: hop.example.com
    type: Input
    validators:
      - hostname # FQDN
    condition:
      - "{{ $cndi.get_prompt_response(deploy_hop_ingress) }}"
      - ==
      - true
  - message: Please enter the hop server password you want to use for hop
    name: hop_server_password
    default: admin
    type: Secret

outputs:
  cndi_config:
    cndi_version: v2
    project_name: "{{ $cndi.get_prompt_response(project_name) }}"
    provider: "{{ $cndi.get_prompt_response(deployment_target_provider) }}"
    distribution: "{{ $cndi.get_prompt_response(deployment_target_distribution) }}"
    infrastructure:
      cndi:
        cert_manager:
          email: "{{ $cndi.get_prompt_response(cert_manager_email) }}"
        nodes:
          $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/{{ $cndi.get_prompt_response(deployment_target_provider) }}/{{ $cndi.get_prompt_response(deployment_target_distribution) }}/standard-nodes.yaml):
            {}
            
    cluster_manifests:
      hop-server-secret:
        apiVersion: v1
        kind: Secret
        metadata:
          name: hop-server
          namespace: hop
        type: Opaque
        stringData:
          pass:  $cndi_on_ow.seal_secret_from_env_var(HOP_SERVER_PASSWORD)
      hop-server-pvc:
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: hop-server-pvc
          namespace: hop
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
      argo-ingress:
        $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/common/default-ingress.yaml):
          args:
            ingress_name: argocd-ingress
            ingress_class_name: public
            hostname: "{{ $cndi.get_prompt_response(argocd_hostname) }}"
            service_name: argocd-server
            service_port: 443
            namespace: argocd
          condition:
            - "{{ $cndi.get_prompt_response(deploy_argocd_ingress) }}"
            - ==
            - true
      hop-web-ingress:
        $cndi.get_block(hop-web-ingress):
          args:
            ingress_name: hop-web-ingress
            hostname: "{{ $cndi.get_prompt_response(hop_hostname) }}"
          condition:
            - "{{ $cndi.get_prompt_response(deploy_hop_ingress) }}"
            - ==
            - true

    applications:
      hop:
        targetRevision: HEAD
        destinationNamespace: hop
        repoURL: 'https://github.com/apache/hop.git'
        path: helm/hop
        values:
          server:
            persistence:
              enabled: true
              existingClaim: hop-server-pvc
  env:
    $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/common/git-credentials-{{ $cndi.get_prompt_response(git_credentials_mode) }}-env.yaml):
      {}

    $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/{{ $cndi.get_prompt_response(deployment_target_provider) }}/env.yaml):
      {}
    $cndi.comment(hop-heading): Hop Connection Parameters
    HOP_SERVER_PASSWORD:  "{{ $cndi.get_prompt_response(hop_server_password) }}"
  
  readme:
    $cndi.get_string(https://raw.githubusercontent.com/polyseam/common-blocks/main/common/core-readme.md):
      {}
    $cndi.get_string(https://raw.githubusercontent.com/polyseam/common-blocks/main/{{ $cndi.get_prompt_response(deployment_target_provider) }}/{{ $cndi.get_prompt_response(deployment_target_distribution) }}/readme-section.md):
      {}
    hop: |
      # hop

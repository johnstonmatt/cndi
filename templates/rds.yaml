prompts:
  - $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/common/core-prompts.yaml):
      {}
  - $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/{{ $cndi.get_prompt_response(deployment_target_provider) }}/setup-prompts.yaml): {}
  - name: rds_password
    message: "Enter the master password for the RDS cluster"
    type: Secret
    required: true

  - name: db_name
    message: "Enter the name of the database"
    type: Input
    default: "mydb"
    required: true

outputs:
  cndi_config:
    cndi_version: v2
    project_name: "{{ $cndi.get_prompt_response(project_name) }}"
    provider: "aws"
    distribution: "clusterless"
    infrastructure:
      terraform:
        data:
          aws_availability_zones:
            available: {}
        variable:
          rds_password:
            type: string
            description: "The master password for the RDS cluster."
            sensitive: true
        module:
          vpc:
            source: "terraform-aws-modules/vpc/aws"
            name: "{{ $cndi.get_prompt_response(db_name) }}-vpc"
            private_subnets: 
              - "10.0.4.0/24"
              - "10.0.5.0/24"
              - "10.0.6.0/24"

            version: "2.77.0"
            cidr: "10.0.0.0/16"
            azs: '${data.aws_availability_zones.available.names}'
         
        resource:
          aws_db_parameter_group:
            rds_parameter_group:
              name: "rds-parameter-group"
              family: "postgres14"
              parameter:
                - name: "log_connections"
                  value: "1"

          aws_security_group:
            rds:
              name: '{{ $cndi.get_prompt_response(db_name) }}-sg'
              vpc_id: module.vpc.vpc_id
              ingress:
                - from_port: 5432
                  to_port: 5432
                  protocol: "tcp"
                  cidr_blocks: ["0.0.0.0/0"]
              egress:
                - from_port: 5432
                  to_port: 5432
                  protocol: "tcp"
                  cidr_blocks: ["0.0.0.0/0"]
              tags:
                Name: '{{ $cndi.get_prompt_response(db_name) }}-sg'

          aws_db_instance:
            my_rds_db_instance:
              allocated_storage: 10
              db_name: "{{ $cndi.get_prompt_response(db_name) }}"
              engine: "postgres"
              instance_class: "db.t3.micro"
              username: "rds"
              password: "${var.rds_password}"
              skip_final_snapshot: true
              multi_az: false
              publicly_accessible: false
              vpc_security_group_ids: '${aws_security_group.rds.id}'

          aws_db_subnet_group:
            my_rds_db_subnet_group:
              subnet_ids: module.vpc.private_subnets
              name: "{{ $cndi.get_prompt_response(db_name) }}-subnet-group"

  env:
    $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/common/git-credentials-{{ $cndi.get_prompt_response(git_credentials_mode) }}-env.yaml):
      {}

    $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/{{ $cndi.get_prompt_response(deployment_target_provider) }}/env.yaml):
      {}
      
    $cndi.comment(RDS_Vars): 'RDS Variables'
    TF_VAR_rds_password: "{{ $cndi.get_prompt_response(rds_password) }}"

  readme:
    project_name: "# {{ $cndi.get_prompt_response(project_name) }}"
    $cndi.get_string(https://raw.githubusercontent.com/polyseam/common-blocks/main/common/core-readme.md):
      {}
    $cndi.get_string(https://raw.githubusercontent.com/polyseam/common-blocks/main/{{ $cndi.get_prompt_response(deployment_target_provider) }}/readme-section.md):
      {}
    rds: |
      # AWS RDS

      This Template provides a clusterless configuration for an AWS RDS instance.